# This workflow will build and push a .NET Core application to an Azure Web App on every push to the master branch.
#
# To configure this workflow:
#
# 1. Set up a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE with the value of your Azure publish profile.
#    Get the publish profile from the portal: https://docs.microsoft.com/visualstudio/deployment/tutorial-import-publish-settings-azure?view=vs-2019#create-the-publish-settings-file-in-azure-app-service
#
# 2. Change the values for the AZURE_WEBAPP_NAME, AZURE_WEBAPP_PACKAGE_PATH and NETCORE_VERSION environment variables  (below).
#
# For more information on GitHub Actions for Azure, refer to https://github.com/Azure/Actions
# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
name: "Build, Publish and Deploy"

on:
  workflow_dispatch:


env:
  AZURE_WEBAPP_NAME: 'sales-api' # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: './published' # set this to the path to your web app project, defaults to the repository root
  NETCORE_VERSION: '9.0.101' # set this to the .NET Core version to use

jobs:
  build:
    name: Build and Publish
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core SDK ${{ env.NETCORE_VERSION }}
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: ${{ env.NETCORE_VERSION }}

    - name: Disable Globalization
      run: echo "DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1" >> $GITHUB_ENV

    - name: Restore packages
      run: dotnet restore

    - name: Build app
      run: dotnet build --configuration Release --no-restore

    - name: Test app
      run: dotnet test --no-build

    - name: Publish app for deploy
      run: dotnet publish --configuration Release -r win-x64 --self-contained --no-build --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Publish Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
  deploy-to-dev:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }} # Azure service principal credentials
        enable-AzPSSession: false
        environment: azurecloud
        allow-no-subscriptions: false
        audience: api://AzureADTokenExchange
        auth-type: SERVICE_PRINCIPAL

    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Deploy to Dev Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Validate Dev Deployment
      id: validate-dev
      run: |
        curl -s --head --request GET https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/ || exit 1
